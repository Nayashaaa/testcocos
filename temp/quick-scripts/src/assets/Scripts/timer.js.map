{"version":3,"sources":["assets\\Scripts\\timer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAsC,4BAAY;IAAlD;QAAA,qEA4DC;QAzDG,eAAS,GAAa,IAAI,CAAC;QAG3B,kBAAY,GAAc,IAAI,CAAC;QAG/B,gBAAU,GAAc,IAAI,CAAC;QAG7B,iBAAW,GAAa,IAAI,CAAC,CAAC,4BAA4B;QAElD,eAAS,GAAY,KAAK,CAAC;QAC3B,iBAAW,GAAW,CAAC,CAAC;QACxB,gBAAU,GAAW,IAAI,CAAC;;IA4CtC,CAAC;IA1CG,yBAAM,GAAN;QACI,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED,8BAAW,GAAX;QACI,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;aAAM;YACH,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QACD,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,qCAAqC;IACnE,CAAC;IAED,6BAAU,GAAV;QAAA,iBAMC;QALG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;YAC1B,KAAI,CAAC,WAAW,IAAI,GAAG,CAAC;YACxB,KAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,0BAA0B;IACvC,CAAC;IAED,4BAAS,GAAT;QACI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,kCAAe,GAAf;QACI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAC9D,CAAC;IAED,oCAAiB,GAAjB;QACI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;IAChE,CAAC;IAED,2BAAQ,GAAR;QACI,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IAvDD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;+CACQ;IAG3B;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;kDACW;IAG/B;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;gDACS;IAG7B;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;iDACU;IAZZ,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA4D5B;IAAD,eAAC;CA5DD,AA4DC,CA5DqC,EAAE,CAAC,SAAS,GA4DjD;kBA5DoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    timeLabel: cc.Label = null;\r\n\r\n    @property(cc.Button)\r\n    toggleButton: cc.Button = null;\r\n\r\n    @property(cc.Button)\r\n    eixtButton: cc.Button = null;\r\n\r\n    @property(cc.Label)\r\n    buttonLabel: cc.Label = null; // Label for the button text\r\n\r\n    private isRunning: boolean = false;\r\n    private elapsedTime: number = 0;\r\n    private intervalId: number = null;\r\n\r\n    onLoad() {\r\n        this.updateTimeLabel();\r\n        this.updateButtonLabel();\r\n        this.toggleButton.node.on('click', this.toggleTimer, this);\r\n        this.eixtButton.node.on('click', this.exitGame, this);\r\n    }\r\n\r\n    toggleTimer() {\r\n        if (this.isRunning) {\r\n            this.stopTimer();\r\n        } else {\r\n            this.startTimer();\r\n        }\r\n        this.updateButtonLabel(); // Update button label based on state\r\n    }\r\n\r\n    startTimer() {\r\n        this.isRunning = true;\r\n        this.intervalId = setInterval(() => {\r\n            this.elapsedTime += 0.1;\r\n            this.updateTimeLabel();\r\n        }, 100); // Update every 0.1 second\r\n    }\r\n\r\n    stopTimer() {\r\n        this.isRunning = false;\r\n        clearInterval(this.intervalId);\r\n        this.intervalId = null;\r\n    }\r\n\r\n    updateTimeLabel() {\r\n        this.timeLabel.string = this.elapsedTime.toFixed(1) + \"s\";\r\n    }\r\n\r\n    updateButtonLabel() {\r\n        this.buttonLabel.string = this.isRunning ? \"Stop\" : \"Start\";\r\n    }\r\n\r\n    exitGame() {\r\n        cc.director.loadScene(\"HomeScene\"); \r\n    }\r\n  \r\n}\r\n"]}